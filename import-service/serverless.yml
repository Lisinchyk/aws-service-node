service: import-service
app: import-service
frameworkVersion: "3"
useDotenv: true
provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  profile: ${env:PROFILE_NAME}
  stage: dev
  environment:
    SQS_ARN: ${env:SQS_ARN}
    SQS_URL: ${env:SQS_URL}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - arn:aws:s3:::${env:BUCKET_NAME}
        - arn:aws:s3:::${env:BUCKET_NAME}/*
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        - Fn::ImportValue: SQSQueueOutput

plugins:
  - serverless-webpack
package:
  individually: true
custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          method: get
          path: import
          cors: true
          request:
            parameters:
              querystrings:
                name: true
          authorizer:
            name: basicAuthorizer
            type: token
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 0
            arn: arn:aws:lambda:us-east-1:377899728263:function:authorization-service-dev-basicAuthorizer
  importFileParser:
    handler: handler.basicAuthorizer
    events:
      - s3:
          bucket: ${env:BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
resources:
  Resources:
    GatewayResponseAccessDenied:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        RestApiId:
          Ref: "ApiGatewayRestApi"
        ResponseType: "ACCESS_DENIED"
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
    GatewayResponseUnauthorized:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        RestApiId:
          Ref: "ApiGatewayRestApi"
        ResponseType: "UNAUTHORIZED"
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
    MissingAuthToken:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        RestApiId:
          Ref: "ApiGatewayRestApi"
        ResponseType: "MISSING_AUTHENTICATION_TOKEN"
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"